version: '3'
services:
  gateway:
    build:
      context: backend
    restart: always
    environment:
      - PYTHONUNBUFFERED=${PYTHON_UNBUFFERED}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
    ports:
      - 8500:8500
    expose:
      - "8500"
    command: poetry run uvicorn gateway.main:app --port 8500 --host 0.0.0.0
    healthcheck:
      test: curl --fail http://localhost:8500/health/ || exit 1
      interval: 120s
    networks:
      - public
      - private
    depends_on:
      - db
      - forecast
      - copilot
  frontend:
    build:
      context: frontend
    restart: always
    command: npm start
    environment:
      - CI=true
      - PORT=3000
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public
    depends_on:
      - gateway
  db:
    image: postgres:12
    restart: always
    volumes:
      - ./db/init_db/sql:/docker-entrypoint-initdb.d/
      - ./db/init_db/data:/db-data
    networks:
      - private
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - "5432"
  adminer:
    image: adminer
    restart: always
    networks:
      - public
      - private
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=${ADMINER_DESIGN}
    ports:
      - 8080:8080
  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - ${OLLAMA_PORT}:${OLLAMA_PORT}
    volumes:
      - ./data:/root/.ollama
  copilot:
    build:
      context: backend
    restart: always
    environment:
      - PYTHONUNBUFFERED=${PYTHON_UNBUFFERED}
      - OLLAMA_BASE_URL=http://${OLLAMA_SERVICE_NAME}:${OLLAMA_PORT}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    ports:
      - 8000:8000
    expose:
      - "8000"
    healthcheck:
      test: curl --fail http://localhost:8000/ || exit 1
      interval: 30s
    command: poetry run chainlit run /src/copilot/main.py
    depends_on:
      - db
  forecast:
    build:
      context: backend
    restart: always
    environment:
      - PYTHONUNBUFFERED=${PYTHON_UNBUFFERED}
      - FORECAST_MODEL=${FORECAST_MODEL}
    ports:
      - 8001:8001
    expose:
      - "8001"
    command: poetry run uvicorn forecast.main:app --port 8001 --host 0.0.0.0
    healthcheck:
      test: curl --fail http://localhost:8001/health/ || exit 1
      interval: 120s
    networks:
      - public
      - private
    depends_on:
      - db
networks:
  public:
  private:
volumes:
  back-notused:
  db-data: