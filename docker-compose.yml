version: '3'
services:
  backend:
    build:
      context: backend
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=db
      - POSTGRES_USER=jason
      - POSTGRES_PASSWORD=jason
      - POSTGRES_HOST=db
    ports:
      - 8500:8500
    expose:
      - "8500"
    command: poetry run uvicorn main:app --port 8500 --host 0.0.0.0
    healthcheck:
      test: curl --fail http://localhost:8500/health || exit 1
      interval: 120s
    networks:
      - public
      - private
    depends_on:
      - db
  frontend:
    build:
      context: frontend
    restart: always
    command: npm start
    environment:
      - CI=true
      - PORT=3000
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public
    depends_on:
      - backend
  db:
    image: postgres:12
    restart: always
    volumes:
      - ./db/init_db/sql:/docker-entrypoint-initdb.d/
      - ./db/init_db/data:/db-data
    networks:
      - private
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=jason
      - POSTGRES_PASSWORD=jason
  adminer:
    image: adminer
    restart: always
    networks:
      - public
      - private
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - 8080:8080
  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - 11434:11434
    volumes:
      - ./data:/root/.ollama
  copilot:
    build:
      context: backend
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8000:8000
    expose:
      - "8000"
    healthcheck:
      test: curl --fail http://localhost:8000/ || exit 1
      interval: 30s
    command: poetry run chainlit run /src/copilot/main.py
networks:
  public:
  private:
volumes:
  back-notused:
  db-data: